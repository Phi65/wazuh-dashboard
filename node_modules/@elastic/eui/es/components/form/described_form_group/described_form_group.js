function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/*
 * SPDX-License-Identifier: Apache-2.0
 *
 * The OpenSearch Contributors require contributions made to
 * this file be licensed under the Apache-2.0 license or a
 * compatible open source license.
 *
 * Modifications Copyright OpenSearch Contributors. See
 * GitHub history for details.
 */

/*
 * Licensed to Elasticsearch B.V. under one or more contributor
 * license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright
 * ownership. Elasticsearch B.V. licenses this file to you under
 * the Apache License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
import React from 'react';
import PropTypes from "prop-types";
import classNames from 'classnames';
import { keysOf } from '../../common';
import { OuiTitle } from '../../title';
import { OuiText } from '../../text';
import { OuiFlexGroup, OuiFlexItem } from '../../flex';
var paddingSizeToClassNameMap = {
  xxxs: 'ouiDescribedFormGroup__fieldPadding--xxxsmall',
  xxs: 'ouiDescribedFormGroup__fieldPadding--xxsmall',
  xs: 'ouiDescribedFormGroup__fieldPadding--xsmall',
  s: 'ouiDescribedFormGroup__fieldPadding--small',
  m: 'ouiDescribedFormGroup__fieldPadding--medium',
  l: 'ouiDescribedFormGroup__fieldPadding--large'
};
export var PADDING_SIZES = keysOf(paddingSizeToClassNameMap);
export var OuiDescribedFormGroup = function OuiDescribedFormGroup(_ref) {
  var children = _ref.children,
      className = _ref.className,
      _ref$gutterSize = _ref.gutterSize,
      gutterSize = _ref$gutterSize === void 0 ? 'l' : _ref$gutterSize,
      _ref$fullWidth = _ref.fullWidth,
      fullWidth = _ref$fullWidth === void 0 ? false : _ref$fullWidth,
      _ref$titleSize = _ref.titleSize,
      titleSize = _ref$titleSize === void 0 ? 'xs' : _ref$titleSize,
      title = _ref.title,
      description = _ref.description,
      descriptionFlexItemProps = _ref.descriptionFlexItemProps,
      fieldFlexItemProps = _ref.fieldFlexItemProps,
      rest = _objectWithoutProperties(_ref, ["children", "className", "gutterSize", "fullWidth", "titleSize", "title", "description", "descriptionFlexItemProps", "fieldFlexItemProps"]);

  var classes = classNames('ouiDescribedFormGroup', {
    'ouiDescribedFormGroup--fullWidth': fullWidth
  }, className);
  var fieldClasses = classNames('ouiDescribedFormGroup__fields', paddingSizeToClassNameMap[titleSize], fieldFlexItemProps && fieldFlexItemProps.className);
  var renderedDescription;

  if (description) {
    renderedDescription = /*#__PURE__*/React.createElement(OuiText, {
      size: "s",
      color: "subdued",
      className: "ouiDescribedFormGroup__description"
    }, description);
  }

  return /*#__PURE__*/React.createElement("div", _extends({
    role: "group",
    className: classes
  }, rest), /*#__PURE__*/React.createElement(OuiFlexGroup, {
    gutterSize: gutterSize
  }, /*#__PURE__*/React.createElement(OuiFlexItem, descriptionFlexItemProps, /*#__PURE__*/React.createElement(OuiTitle, {
    size: titleSize,
    className: "ouiDescribedFormGroup__title"
  }, title), renderedDescription), /*#__PURE__*/React.createElement(OuiFlexItem, _extends({}, fieldFlexItemProps, {
    className: fieldClasses
  }), children)));
};
/* OUI -> EUI Aliases: Build-Time */

OuiDescribedFormGroup.propTypes = {
  className: PropTypes.string,
  "aria-label": PropTypes.string,
  "data-test-subj": PropTypes.string,

  /**
       * One or more `OuiFormRow`s
       */
  children: PropTypes.node,

  /**
       * Passed to `OuiFlexGroup`
       */
  gutterSize: PropTypes.oneOf(["none", "xs", "s", "m", "l", "xl"]),
  fullWidth: PropTypes.bool,

  /**
       * For better accessibility, it's recommended the use of HTML headings
       */
  title: PropTypes.element.isRequired,
  titleSize: PropTypes.oneOf(["xxxs", "xxs", "xs", "s", "m", "l"]),

  /**
       * Added as a child of `OuiText`
       */
  description: PropTypes.node,

  /**
       * For customizing the field container. Extended from `OuiFlexItem`
       */
  descriptionFlexItemProps: PropTypes.any,
  fieldFlexItemProps: PropTypes.any
};

/* OUI -> EUI Aliases: Build-Time */
export { EuiDescribedFormGroup } from '../../../eui_components/form/described_form_group/described_form_group';
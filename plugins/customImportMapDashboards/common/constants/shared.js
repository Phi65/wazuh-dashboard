"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.UPLOAD_GEOJSON_API_PATH = exports.PLUGIN_NAME = exports.PLUGIN_ID = exports.MAX_FILE_PAYLOAD_SIZE_IN_MB = exports.MAX_FILE_PAYLOAD_SIZE = exports.MAPS_APP_ID = exports.MAPS_APP_DISPLAY_NAME = exports.BASE_NODE_API_PATH = exports.ALLOWED_FILE_EXTENSIONS = void 0;

var _util = require("../util");

/*
 * Copyright OpenSearch Contributors
 * SPDX-License-Identifier: Apache-2.0
 */
const ALLOWED_FILE_EXTENSIONS = ['.json', '.geojson'];
exports.ALLOWED_FILE_EXTENSIONS = ALLOWED_FILE_EXTENSIONS;
const BASE_NODE_API_PATH = '/_plugins/geospatial';
exports.BASE_NODE_API_PATH = BASE_NODE_API_PATH;
const UPLOAD_GEOJSON_API_PATH = `${BASE_NODE_API_PATH}/geojson/_upload`;
exports.UPLOAD_GEOJSON_API_PATH = UPLOAD_GEOJSON_API_PATH;
const MAX_FILE_PAYLOAD_SIZE_IN_MB = 25;
exports.MAX_FILE_PAYLOAD_SIZE_IN_MB = MAX_FILE_PAYLOAD_SIZE_IN_MB;
const MAX_FILE_PAYLOAD_SIZE = (0, _util.fromMBtoBytes)(MAX_FILE_PAYLOAD_SIZE_IN_MB);
exports.MAX_FILE_PAYLOAD_SIZE = MAX_FILE_PAYLOAD_SIZE;
const PLUGIN_ID = 'customImportMap';
exports.PLUGIN_ID = PLUGIN_ID;
const PLUGIN_NAME = 'customImportMap';
exports.PLUGIN_NAME = PLUGIN_NAME;
const MAPS_APP_DISPLAY_NAME = 'Maps';
exports.MAPS_APP_DISPLAY_NAME = MAPS_APP_DISPLAY_NAME;
const MAPS_APP_ID = 'maps-dashboards';
exports.MAPS_APP_ID = MAPS_APP_ID;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNoYXJlZC50cyJdLCJuYW1lcyI6WyJBTExPV0VEX0ZJTEVfRVhURU5TSU9OUyIsIkJBU0VfTk9ERV9BUElfUEFUSCIsIlVQTE9BRF9HRU9KU09OX0FQSV9QQVRIIiwiTUFYX0ZJTEVfUEFZTE9BRF9TSVpFX0lOX01CIiwiTUFYX0ZJTEVfUEFZTE9BRF9TSVpFIiwiUExVR0lOX0lEIiwiUExVR0lOX05BTUUiLCJNQVBTX0FQUF9ESVNQTEFZX05BTUUiLCJNQVBTX0FQUF9JRCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUtBOztBQUxBO0FBQ0E7QUFDQTtBQUNBO0FBSU8sTUFBTUEsdUJBQXVCLEdBQUcsQ0FBQyxPQUFELEVBQVUsVUFBVixDQUFoQzs7QUFDQSxNQUFNQyxrQkFBa0IsR0FBRyxzQkFBM0I7O0FBQ0EsTUFBTUMsdUJBQXVCLEdBQUksR0FBRUQsa0JBQW1CLGtCQUF0RDs7QUFDQSxNQUFNRSwyQkFBMkIsR0FBRyxFQUFwQzs7QUFDQSxNQUFNQyxxQkFBcUIsR0FBRyx5QkFBY0QsMkJBQWQsQ0FBOUI7O0FBQ0EsTUFBTUUsU0FBUyxHQUFHLGlCQUFsQjs7QUFDQSxNQUFNQyxXQUFXLEdBQUcsaUJBQXBCOztBQUNBLE1BQU1DLHFCQUFxQixHQUFHLE1BQTlCOztBQUNBLE1BQU1DLFdBQVcsR0FBRyxpQkFBcEIiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IE9wZW5TZWFyY2ggQ29udHJpYnV0b3JzXG4gKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQXBhY2hlLTIuMFxuICovXG5cbmltcG9ydCB7IGZyb21NQnRvQnl0ZXMgfSBmcm9tICcuLi91dGlsJztcblxuZXhwb3J0IGNvbnN0IEFMTE9XRURfRklMRV9FWFRFTlNJT05TID0gWycuanNvbicsICcuZ2VvanNvbiddO1xuZXhwb3J0IGNvbnN0IEJBU0VfTk9ERV9BUElfUEFUSCA9ICcvX3BsdWdpbnMvZ2Vvc3BhdGlhbCc7XG5leHBvcnQgY29uc3QgVVBMT0FEX0dFT0pTT05fQVBJX1BBVEggPSBgJHtCQVNFX05PREVfQVBJX1BBVEh9L2dlb2pzb24vX3VwbG9hZGA7XG5leHBvcnQgY29uc3QgTUFYX0ZJTEVfUEFZTE9BRF9TSVpFX0lOX01CID0gMjU7XG5leHBvcnQgY29uc3QgTUFYX0ZJTEVfUEFZTE9BRF9TSVpFID0gZnJvbU1CdG9CeXRlcyhNQVhfRklMRV9QQVlMT0FEX1NJWkVfSU5fTUIpO1xuZXhwb3J0IGNvbnN0IFBMVUdJTl9JRCA9ICdjdXN0b21JbXBvcnRNYXAnO1xuZXhwb3J0IGNvbnN0IFBMVUdJTl9OQU1FID0gJ2N1c3RvbUltcG9ydE1hcCc7XG5leHBvcnQgY29uc3QgTUFQU19BUFBfRElTUExBWV9OQU1FID0gJ01hcHMnO1xuZXhwb3J0IGNvbnN0IE1BUFNfQVBQX0lEID0gJ21hcHMtZGFzaGJvYXJkcyc7XG4iXX0=
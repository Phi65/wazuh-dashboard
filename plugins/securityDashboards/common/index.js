"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.globalTenantName = exports.SAML_AUTH_LOGOUT = exports.SAML_AUTH_LOGIN_WITH_FRAGMENT = exports.SAML_AUTH_LOGIN = exports.PRIVATE_TENANT_SYMBOL = exports.PRIVATE_TENANT_RENDERING_TEXT = exports.PLUGIN_NAME = exports.PLUGIN_ID = exports.OPENID_AUTH_LOGOUT = exports.OPENID_AUTH_LOGIN = exports.OPENDISTRO_SECURITY_ANONYMOUS = exports.MAX_LENGTH_OF_COOKIE_BYTES = exports.MAX_INTEGER = exports.LOGIN_PAGE_URI = exports.GLOBAL_TENANT_SYMBOL = exports.GLOBAL_TENANT_RENDERING_TEXT = exports.ESTIMATED_IRON_COOKIE_OVERHEAD = exports.ERROR_MISSING_ROLE_PATH = exports.DEFAULT_TENANT = exports.CUSTOM_ERROR_PAGE_URI = exports.CONFIGURATION_API_PREFIX = exports.AuthType = exports.AUTH_RESPONSE_TYPE = exports.AUTH_HEADER_NAME = exports.AUTH_GRANT_TYPE = exports.APP_ID_LOGIN = exports.APP_ID_CUSTOMERROR = exports.API_PREFIX = exports.API_ENDPOINT_DASHBOARDSINFO = exports.API_ENDPOINT_AUTHTYPE = exports.API_ENDPOINT_AUTHINFO = exports.API_AUTH_LOGOUT = exports.API_AUTH_LOGIN = exports.ANONYMOUS_AUTH_LOGOUT = exports.ANONYMOUS_AUTH_LOGIN = void 0;
exports.isGlobalTenant = isGlobalTenant;
exports.isPrivateTenant = isPrivateTenant;
exports.isRenderingPrivateTenant = isRenderingPrivateTenant;
exports.isValidResourceName = isValidResourceName;

/*
 *   Copyright OpenSearch Contributors
 *
 *   Licensed under the Apache License, Version 2.0 (the "License").
 *   You may not use this file except in compliance with the License.
 *   A copy of the License is located at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   or in the "license" file accompanying this file. This file is distributed
 *   on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
 *   express or implied. See the License for the specific language governing
 *   permissions and limitations under the License.
 */
const PLUGIN_ID = 'opensearchDashboardsSecurity';
exports.PLUGIN_ID = PLUGIN_ID;
const PLUGIN_NAME = 'security-dashboards-plugin';
exports.PLUGIN_NAME = PLUGIN_NAME;
const APP_ID_LOGIN = 'login';
exports.APP_ID_LOGIN = APP_ID_LOGIN;
const APP_ID_CUSTOMERROR = 'customerror';
exports.APP_ID_CUSTOMERROR = APP_ID_CUSTOMERROR;
const OPENDISTRO_SECURITY_ANONYMOUS = 'opendistro_security_anonymous';
exports.OPENDISTRO_SECURITY_ANONYMOUS = OPENDISTRO_SECURITY_ANONYMOUS;
const API_PREFIX = '/api/v1';
exports.API_PREFIX = API_PREFIX;
const CONFIGURATION_API_PREFIX = 'configuration';
exports.CONFIGURATION_API_PREFIX = CONFIGURATION_API_PREFIX;
const API_ENDPOINT_AUTHINFO = API_PREFIX + '/auth/authinfo';
exports.API_ENDPOINT_AUTHINFO = API_ENDPOINT_AUTHINFO;
const API_ENDPOINT_DASHBOARDSINFO = API_PREFIX + '/auth/dashboardsinfo';
exports.API_ENDPOINT_DASHBOARDSINFO = API_ENDPOINT_DASHBOARDSINFO;
const API_ENDPOINT_AUTHTYPE = API_PREFIX + '/auth/type';
exports.API_ENDPOINT_AUTHTYPE = API_ENDPOINT_AUTHTYPE;
const LOGIN_PAGE_URI = '/app/' + APP_ID_LOGIN;
exports.LOGIN_PAGE_URI = LOGIN_PAGE_URI;
const CUSTOM_ERROR_PAGE_URI = '/app/' + APP_ID_CUSTOMERROR;
exports.CUSTOM_ERROR_PAGE_URI = CUSTOM_ERROR_PAGE_URI;
const API_AUTH_LOGIN = '/auth/login';
exports.API_AUTH_LOGIN = API_AUTH_LOGIN;
const API_AUTH_LOGOUT = '/auth/logout';
exports.API_AUTH_LOGOUT = API_AUTH_LOGOUT;
const OPENID_AUTH_LOGIN = '/auth/openid/login';
exports.OPENID_AUTH_LOGIN = OPENID_AUTH_LOGIN;
const SAML_AUTH_LOGIN = '/auth/saml/login';
exports.SAML_AUTH_LOGIN = SAML_AUTH_LOGIN;
const ANONYMOUS_AUTH_LOGIN = '/auth/anonymous';
exports.ANONYMOUS_AUTH_LOGIN = ANONYMOUS_AUTH_LOGIN;
const SAML_AUTH_LOGIN_WITH_FRAGMENT = '/auth/saml/captureUrlFragment?nextUrl=%2F';
exports.SAML_AUTH_LOGIN_WITH_FRAGMENT = SAML_AUTH_LOGIN_WITH_FRAGMENT;
const OPENID_AUTH_LOGOUT = '/auth/openid/logout';
exports.OPENID_AUTH_LOGOUT = OPENID_AUTH_LOGOUT;
const SAML_AUTH_LOGOUT = '/auth/saml/logout';
exports.SAML_AUTH_LOGOUT = SAML_AUTH_LOGOUT;
const ANONYMOUS_AUTH_LOGOUT = '/auth/anonymous/logout';
exports.ANONYMOUS_AUTH_LOGOUT = ANONYMOUS_AUTH_LOGOUT;
const ERROR_MISSING_ROLE_PATH = '/missing-role';
exports.ERROR_MISSING_ROLE_PATH = ERROR_MISSING_ROLE_PATH;
const AUTH_HEADER_NAME = 'authorization';
exports.AUTH_HEADER_NAME = AUTH_HEADER_NAME;
const AUTH_GRANT_TYPE = 'authorization_code';
exports.AUTH_GRANT_TYPE = AUTH_GRANT_TYPE;
const AUTH_RESPONSE_TYPE = 'code';
exports.AUTH_RESPONSE_TYPE = AUTH_RESPONSE_TYPE;
const GLOBAL_TENANT_SYMBOL = '';
exports.GLOBAL_TENANT_SYMBOL = GLOBAL_TENANT_SYMBOL;
const PRIVATE_TENANT_SYMBOL = '__user__';
exports.PRIVATE_TENANT_SYMBOL = PRIVATE_TENANT_SYMBOL;
const DEFAULT_TENANT = 'default';
exports.DEFAULT_TENANT = DEFAULT_TENANT;
const GLOBAL_TENANT_RENDERING_TEXT = 'Global';
exports.GLOBAL_TENANT_RENDERING_TEXT = GLOBAL_TENANT_RENDERING_TEXT;
const PRIVATE_TENANT_RENDERING_TEXT = 'Private';
exports.PRIVATE_TENANT_RENDERING_TEXT = PRIVATE_TENANT_RENDERING_TEXT;
const globalTenantName = 'global_tenant';
exports.globalTenantName = globalTenantName;
const MAX_INTEGER = 2147483647;
exports.MAX_INTEGER = MAX_INTEGER;
const MAX_LENGTH_OF_COOKIE_BYTES = 4000;
exports.MAX_LENGTH_OF_COOKIE_BYTES = MAX_LENGTH_OF_COOKIE_BYTES;
const ESTIMATED_IRON_COOKIE_OVERHEAD = 1.5;
exports.ESTIMATED_IRON_COOKIE_OVERHEAD = ESTIMATED_IRON_COOKIE_OVERHEAD;
let AuthType;
/**
 * A valid resource name should not containing percent sign (%) as they raise url injection issue.
 * And also should not be empty.
 * @param resourceName resource name to be validated
 */

exports.AuthType = AuthType;

(function (AuthType) {
  AuthType["BASIC"] = "basicauth";
  AuthType["OPEN_ID"] = "openid";
  AuthType["JWT"] = "jwt";
  AuthType["SAML"] = "saml";
  AuthType["PROXY"] = "proxy";
  AuthType["ANONYMOUS"] = "anonymous";
})(AuthType || (exports.AuthType = AuthType = {}));

function isValidResourceName(resourceName) {
  // see: https://javascript.info/regexp-unicode
  const exp = new RegExp('[\\p{C}%]', 'u');
  return !exp.test(resourceName) && resourceName.length > 0;
}

function isPrivateTenant(selectedTenant) {
  return selectedTenant !== null && selectedTenant === PRIVATE_TENANT_SYMBOL;
}

function isRenderingPrivateTenant(selectedTenant) {
  return selectedTenant !== null && (selectedTenant === null || selectedTenant === void 0 ? void 0 : selectedTenant.startsWith(PRIVATE_TENANT_SYMBOL));
}

function isGlobalTenant(selectedTenant) {
  return selectedTenant !== null && selectedTenant === GLOBAL_TENANT_SYMBOL;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,